<?php
/**
 * @file
 * Code for the BugGuide book references feature.
 */

include_once 'bgref.features.inc';

/**
 * Implements hook_views_query_alter()
 */
function bgref_views_query_alter(&$view, &$query) {
  // Transform bgpage nid that comes as an argument into its parents field.
  if (($view->name === 'all_books') && ($view->current_display == 'by_bgpage')) {
    _bgpage_views_query_alter_for_field_parent($view, $query);
  }
}

/**
 * Implements hook_menu().
 */
function bgref_menu() {
  $items = array();

  $items['node/%bgpage_node/bgref/add'] = array(
    'title' => 'Add book',
    'page callback' => 'bgref_add_ref',
    'page arguments' => array(1),
    'access arguments' => array('create book_reference content'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'bgref.pages.inc',
  );

  return $items;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function bgref_form_book_reference_node_form_alter(&$form, &$form_state, $form_id) {
  if (!user_access('view raw parents')) {
    $form['field_parent']['#access'] = FALSE;
  }
}

/**
 * Implements hook_node_validate().
 */
function bgref_node_validate($node, $form, &$form_state) {
  if ($node->type != 'book_reference') {
    return;
  }

  drupal_load('module', 'bg');

  // Attempt to set the full parent based on our calling nid.
  bg_node_validate_set_parent($form_state, arg(3));
}
